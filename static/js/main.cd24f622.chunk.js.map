{"version":3,"sources":["pages/home/home.module.css","util/ScrollTop.js","layout/wrapper/index.js","layout/header/index.js","layout/footer/index.js","util/Colorcode.js","pages/home/index.js","pages/order/index.js","pages/orderEnd/index.js","components/modify/index.js","pages/orderList/index.js","App.js","index.js","pages/order/Order.module.css","pages/orderList/OrderList.module.css","pages/orderEnd/OrderEnd.module.css","components/modify/Modify.module.css","layout/header/Header.module.css","layout/wrapper/Wrapper.module.css","layout/footer/Footer.module.css"],"names":["module","exports","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Wrapper","children","className","style","Header","useState","openNav","setOpenNav","navCloser","HeaderPc","to","Logo","HeaderMobile","NavOpen","onClick","src","alt","isshow","NavClose","Footer","Colorcode","color","GET_COLORS","gql","Home","cx","classNames","bind","history","useHistory","user","localStorage","getItem","selectedColor","setSelectedColor","productName","setProductName","id","tag_name","hashtag","setHashtag","get_colors","useQuery","loading","error","Textbox","Goodsbox","BracketLeft","BracketRight","InnerText","ColorNum","ItemName","CodeName","Hashtag","map","tag","i","Size","CustomWrapper","Colorbox","data","colors","clickColor","color_name","type","name","background","InputGoodsnameWrap","BreacketLeftBlack","BreacketRightBlack","InputGoodsname","onChange","e","target","value","placeholder","InputHashtagWrap","InputHashtag","idx","getHashtag","filter","h","sort","a","b","changeHashtag","backgroundColor","inputs","user_id","JSON","parse","title","hashtag1","hashtag2","hashtag3","is_pay","sessionStorage","setItem","stringify","alert","push","POST_ORDER","Order","product","setName","phone","setPhone","address","setAddress","defailAddress","setDefailAddress","price","addrInputRef","useRef","isShowPostCode","setIsShowPostCode","useMutation","onCompleted","postOrder","Left","Title","InputName","InputStyle","InputAddress","readOnly","ref","onComplete","fullAddress","extraAddress","addressType","bname","buildingName","current","BtnSearch","Right","OrderInfoBox","TitlePay","PayList","Total","BtnPay","confirm","Number","addr","variables","input","SubText","GET_LAST_ORDER","OrderEnd","proudct","lastOrder","Productbox","Userbox","EDIT_ORDER","Modify","order","setIsShowModify","colorChecked","setColorChecked","setInputs","editOrder","changeInputs","new_data","clickSubmit","result_data","execEditOrder","InputColorCode","useCallback","ColorCode","Inputbox","GET_ORDERS","DELETE_ORDER","OrderList","orderForModify","setOrderForModify","isShowModify","refetchQueries","query","deleteOrder","user_data","orders","undefined","List","length","Btnbox","clickEditOrder","App","client","ApolloClient","uri","cache","InMemoryCache","onError","graphQLErrors","networkError","message","locations","path","console","log","email","ApolloProvider","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,SAAW,uBAAuB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,UAAY,wBAAwB,SAAW,uBAAuB,SAAW,uBAAuB,SAAW,uBAAuB,QAAU,sBAAsB,KAAO,mBAAmB,YAAc,0BAA0B,aAAe,2BAA2B,SAAW,uBAAuB,cAAgB,4BAA4B,mBAAqB,iCAAiC,eAAiB,6BAA6B,kBAAoB,gCAAgC,mBAAqB,iCAAiC,iBAAmB,+BAA+B,aAAe,6B,6FCapyBC,MAVf,WACE,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,M,wBCAMK,MARf,YAA+B,IAAbC,EAAY,EAAZA,SACd,OACI,qBAAKC,UAAWC,IAAMH,QAAtB,SACKC,K,yBCgCEG,MAlCf,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAAY,kBAAMD,GAAW,IAEnC,OACI,qCACI,sBAAKL,UAAWC,IAAMM,SAAtB,UACI,cAAC,IAAD,CAAMC,GAAG,UAAUR,UAAWC,IAAMQ,KAApC,6BACA,cAAC,IAAD,CAAMD,GAAG,UAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,2BAGJ,sBAAKR,UAAWC,IAAMS,aAAtB,UACI,cAAC,IAAD,CAAMF,GAAG,UAAUR,UAAWC,IAAMQ,KAApC,6BACA,wBAAQT,UAAWC,IAAMU,QAASC,QAb5B,kBAAMP,GAAW,IAavB,SACI,qBAAKQ,IAAI,+BAA+BC,IAAI,sBAGhD,sBAAKC,QAAkB,IAAVX,EAAkB,GAAK,SAApC,UACI,wBAAQJ,UAAWC,IAAMe,SAAUJ,QAASN,EAA5C,SACI,qBAAKO,IAAI,qCAAqCC,IAAI,uBAEtD,cAAC,IAAD,CAAMF,QAASN,EAAWE,GAAG,IAA7B,mBACA,cAAC,IAAD,CAAMI,QAASN,EAAWE,GAAG,aAA7B,wBAEA,0D,iBCpBLS,I,EAAAA,EARf,WACI,OACI,qBAAKjB,UAAWC,IAAMgB,OAAtB,wD,oECLD,SAASC,EAAUC,GACtB,MAAc,QAAVA,EACO,UACS,SAAVA,EACC,UACS,UAAVA,EACC,UACS,WAAVA,EACC,eADL,ECKV,IAAMC,EAAaC,YAAH,mHA6MDC,I,EAAAA,EA9Lf,WACI,IAAMC,EAAKC,IAAWC,KAAKxB,KACrByB,EAAUC,cACVC,EAAOC,aAAaC,QAAQ,QAKlC,EAA0C3B,mBAAS,OAAnD,mBAAO4B,EAAP,KAAsBC,EAAtB,KACA,EAAsC7B,mBAAS,IAA/C,mBAAO8B,EAAP,KAAoBC,EAApB,KACA,EAA8B/B,mBAAS,CACnC,CACIgC,GAAG,EACHC,SAAS,IAEb,CACID,GAAG,EACHC,SAAS,IAEb,CACID,GAAG,EACHC,SAAS,MAXjB,mBAAOC,EAAP,KAAgBC,EAAhB,KAuEMC,EAAaC,YAASpB,GAE5B,OAAImB,EAAWE,QAAgB,mBAAGzC,UAAU,UAAb,wBAC3BuC,EAAWG,MAAc,mBAAG1C,UAAU,QAAb,sBAKzB,sBAAKA,UAAWC,IAAMqB,KAAtB,UAEI,sBAAKtB,UAAWC,IAAM0C,QAAtB,UACI,oHACA,wOAGJ,sBAAK3C,UAAWC,IAAM2C,SAAtB,UACI,qBAAK/B,IAAK,qCAAsCb,UAAWC,IAAM4C,cACjE,qBAAKhC,IAAK,sCAAuCb,UAAWC,IAAM6C,eAElE,sBAAK9C,UAAWuB,EAAG,OAAQ,SAA3B,UACI,sBAAKvB,UAAWC,IAAM8C,UAAtB,UACI,mBAAG/C,UAAWC,IAAM+C,SAApB,SAA+B9B,EAAUa,KACzC,mBAAG/B,UAAWC,IAAMgD,SAApB,qBACA,mBAAGjD,UAAWC,IAAMiD,SAApB,SAA+C,KAAhBjB,EAAqBA,EAAc,WAClE,mBAAGjC,UAAWC,IAAMkD,QAApB,SAEQd,EAAQe,KAAI,SAACC,EAAKC,GAAN,MACS,KAAjBD,EAAIjB,UACJ,0CACSiB,EAAIjB,SADb,MAAWkB,QAMvB,mBAAGtD,UAAWC,IAAMsD,KAApB,sCAEJ,qBAAK1C,IAAG,8BAAyBkB,EAAzB,QAA8CjB,IAAI,uCAG9D,sBAAKd,UAAWuB,EAAG,OAAQ,SAA3B,UACI,sBAAKvB,UAAWC,IAAM8C,UAAtB,UACI,mBAAG/C,UAAWC,IAAM+C,SAApB,SAA+B9B,EAAUa,KACzC,mBAAG/B,UAAWC,IAAMgD,SAApB,yBACA,mBAAGjD,UAAWC,IAAMiD,SAApB,SAA+C,KAAhBjB,EAAqBA,EAAc,WAClE,mBAAGjC,UAAWC,IAAMkD,QAApB,SAEQd,EAAQe,KAAI,SAACC,EAAKC,GAAN,MACS,KAAjBD,EAAIjB,UACJ,0CACSiB,EAAIjB,SADb,MAAWkB,QAMvB,mBAAGtD,UAAWC,IAAMsD,KAApB,sCAEJ,qBAAK1C,IAAG,8BAAyBkB,EAAzB,QAA8CjB,IAAI,uCAG9D,sBAAKd,UAAWC,IAAMuD,cAAtB,UACI,oBAAIxD,UAAWC,IAAMwD,SAArB,SAEQlB,EAAWmB,KAAKC,OAAOP,KAAI,SAACjC,EAAOmC,GAC/B,OACI,6BACI,wBAAO1C,QAAS,kBApHjC,SAACO,GAChBa,EAAiBb,GAmHqCyC,CAAWzC,EAAM0C,aAAvC,UACI,uBAAOC,KAAK,QAAQ9D,UAAU,gBAAgB+D,KAAK,kBACnD,qBAAK9D,MAAO,CAAC+D,WAAW7C,EAAM0C,kBAH7B1C,EAAMgB,SAW/B,sBAAKnC,UAAWC,IAAMgE,mBAAtB,UACI,qBAAKpD,IAAI,sCAAsCb,UAAWC,IAAMiE,oBAChE,qBAAKrD,IAAI,uCAAuCb,UAAWC,IAAMkE,qBACjE,uBAAOL,KAAM,OAAQ9D,UAAWC,IAAMmE,eAAgBC,SA5HhD,SAACC,GACvBpC,EAAeoC,EAAEC,OAAOC,QA2H4EC,YAAa,gCAIrG,qBAAKzE,UAAWC,IAAMyE,iBAAtB,SAEQrC,EAAQe,KAAI,SAACC,EAAKC,GAEd,OACI,wBAAetD,UAAWC,IAAM0E,aAAhC,UACI,qBAAK9D,IAAI,6BACT,uBAAOiD,KAAK,OAAOC,KAAI,iBAAYT,GAAKmB,YAAY,2BAAOJ,SAAU,SAACC,GAAD,OAlInF,SAACA,EAAGM,GACtB,IAAQJ,EAAUF,EAAEC,OAAZC,MAGJK,EAAU,sBACPxC,EAAQyC,QAAO,SAAAC,GAAC,OAAIA,EAAE5C,KAAOyC,MADtB,CAEV,CACIzC,GAAGyC,EACHxC,SAAUoC,KAKlBK,EAAWG,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAE9C,GAAG+C,EAAE/C,MAEhCG,EAAWuC,GAmHiGM,CAAcb,EAAGhB,QAFrFA,QAS5B,wBACItD,UAAU,aACVC,MAAO,CAACmF,gBAAgB,GAAD,OAAIrD,IAC3BnB,QAzHA,WAChB,IAAMyE,EAAS,CACXC,QAAQC,KAAKC,MAAM5D,GAAMA,KAAKO,GAC9BhB,MAAMY,EACN0D,MAAMxD,EACNyD,SAASrD,EAAQ,GAAGD,SACpBuD,SAAStD,EAAQ,GAAGD,SACpBwD,SAASvD,EAAQ,GAAGD,SACpByD,OAAO,KAGXC,eAAeC,QAAQ,YAAaR,KAAKS,UAAUX,IAEnDY,MAAM,yIACNvE,EAAQwE,KAAK,WAwGD,yE,2CCjMdC,EAAa9E,YAAH,0WAmMD+E,I,EAAAA,EA7Kf,WACI,IAAM7E,EAAKC,IAAWC,KAAKxB,KACrByB,EAAUC,cACVC,EAAOC,aAAaC,QAAQ,QAM5BuE,EAAUd,KAAKC,MAAMM,eAAehE,QAAQ,cAClD,EAAwB3B,mBAAS,IAAjC,mBAAO4D,EAAP,KAAauC,EAAb,KACA,EAA0BnG,mBAAS,IAAnC,mBAAOoG,EAAP,KAAcC,EAAd,KACA,EAA8BrG,mBAAS,IAAvC,mBAAOsG,EAAP,KAAgBC,EAAhB,KACA,EAA0CvG,mBAAS,IAAnD,mBAAOwG,EAAP,KAAsBC,EAAtB,KACA,EAA0BzG,mBAAS,SAAnC,mBAAO0G,EAAP,KAMMC,GANN,KAMqBC,oBACrB,EAA4C5G,oBAAS,GAArD,mBAAO6G,EAAP,KAAuBC,EAAvB,KAoCA,EAAoBC,YAChBf,EAAY,CAAEgB,YALS,SAACzD,GACxBhC,EAAQwE,KAAK,gBAGVkB,EAAP,oBA6CA,OACI,sBAAKpH,UAAWC,IAAMmG,MAAtB,UACI,sBAAKpG,UAAWC,IAAMoH,KAAtB,UACI,8CACA,qBAAKrH,UAAWC,IAAMqH,MAAtB,kEACA,qBAAKtH,UAAWC,IAAMsH,UAAtB,0BACA,uBAAOzD,KAAK,OAAO9D,UAAWC,IAAMuH,WAAY/C,YAAY,4BAAQJ,SAAU,SAACC,GAAD,OAAOgC,EAAQhC,EAAEC,OAAOC,UAEtG,qBAAKxE,UAAWC,IAAMsH,UAAtB,6CACA,uBAAOzD,KAAK,SAAS9D,UAAWC,IAAMuH,WAAY/C,YAAY,+CAAYJ,SAAU,SAACC,GAAD,OAAOkC,EAASlC,EAAEC,OAAOC,UAG7G,qBAAKxE,UAAWC,IAAMsH,UAAtB,6CACA,sBAAKvH,UAAWC,IAAMwH,aAAtB,UACI,uBAAO3D,KAAK,OAAO9D,UAAWuB,EAAG,aAAc,WAAYkD,YAAY,4BAAQiD,UAAQ,EAACC,IAAKb,KAEtE,IAAnBE,GAA2B,cAAC,IAAD,CAAcY,WAxF9B,SAAClE,GAC5B,IAAImE,EAAcnE,EAAK+C,QACnBqB,EAAe,GAEM,MAArBpE,EAAKqE,cACc,KAAfrE,EAAKsE,QACLF,GAAgBpE,EAAKsE,OAEC,KAAtBtE,EAAKuE,eACLH,GAAkC,KAAjBA,EAAA,YAA2BpE,EAAKuE,cAAiBvE,EAAKuE,cAE3EJ,GAAiC,KAAjBC,EAAA,YAA2BA,EAA3B,KAA6C,IAGjEhB,EAAaoB,QAAQ1D,MAAMqD,EAC3BnB,EAAWmB,GACXZ,GAAkB,MA2EN,wBAAQjH,UAAWC,IAAMkI,UAAWvH,QAlG/B,WAEfqG,GADiB,IAAnBD,IAiGY,SACI,qBAAKnG,IAAI,6BAA6BC,IAAI,sDAGlD,uBAAOgD,KAAK,OAAO9D,UAAWC,IAAMuH,WAAY/C,YAAY,wCAAUJ,SAAU,SAACC,GAAD,OAAOsC,EAAiBtC,EAAEC,OAAOC,aAErH,qBAAKxE,UAAWC,IAAMmI,MAAtB,SACI,sBAAKpI,UAAWC,IAAMoI,aAAtB,UACI,oBAAGrI,UAAWC,IAAMqI,SAApB,UACI,qBAAKzH,IAAI,2BAA2BC,IAAI,KAD5C,+BAIA,qBAAId,UAAWC,IAAMsI,QAArB,UACI,+BACI,gDACA,mFAEJ,+BACI,gDACA,sBAAMtI,MAAO,CAACkB,MAAMkF,EAAQlF,OAA5B,SAAqCkF,EAAQlF,WAEjD,+BACI,4DACA,+BAAOkF,EAAQZ,WAEnB,+BACI,6DACA,+BAAOY,EAAQX,cAEnB,+BACI,6DACA,+BAAOW,EAAQV,cAEnB,+BACI,6DACA,+BAAOU,EAAQT,cAEnB,qBAAI5F,UAAWC,IAAMuI,MAArB,UACI,sEACA,mDAGR,wBAAQxI,UAAWC,IAAMwI,OAAQ7H,QAtG3B,WAElB,GAAKmD,EAIA,GAAKwC,EAIL,GAAKE,EAIL,GAAKE,GAKV,GAAI/G,OAAO8I,QAAP,gDAA6B,CAC7B,IAAMrD,EAAS,CACXC,QAAQC,KAAKC,MAAM5D,GAAMA,KAAKO,GAC9BhB,MAAMkF,EAAQlF,MACdsE,MAAMY,EAAQZ,MACdC,SAASW,EAAQX,SACjBC,SAASU,EAAQV,SACjBC,SAASS,EAAQT,SACjBC,OAAO,IACP9B,KAAKA,EACLwC,MAAMoC,OAAOpC,GACbqC,KAAK,GAAD,OAAInC,EAAJ,aAAgBE,GACpBE,MAAM8B,OAAO9B,IAGjBO,EACI,CAAEyB,UAAU,CAACC,MAAOzD,WApBxBY,MAAM,6EAJNA,MAAM,gEAJNA,MAAM,4EAJNA,MAAM,4DAmGE,sCAEA,oBAAGjG,UAAWC,IAAM8I,QAApB,2IAAuD,uBAAvD,0J,iBC5LdC,EAAiB3H,YAAH,yVAkHL4H,I,EAAAA,EA3Ff,WACItJ,qBAAU,cAEP,IAEH,IAAM4B,EAAKC,IAAWC,KAAKxB,KACrByB,EAAUC,cACVC,EAAOC,aAAaC,QAAQ,QAYlC,EAAiCU,YAASwG,EAAgB,CACtDH,UAAU,CAACvD,QAAQC,KAAKC,MAAM5D,GAAMA,KAAKO,MADrCuB,EAAR,EAAQA,KAAMjB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAGjBwG,EAAO,OAAGxF,QAAH,IAAGA,OAAH,EAAGA,EAAMyF,UAEtB,OAAG1G,EAAgB,8CACfyG,GAAWxG,EAAc,2CAGzB,sBAAK1C,UAAWC,IAAMgJ,SAAtB,UACI,gGAEA,sBAAKjJ,UAAWC,IAAMmJ,WAAtB,UACI,sBAAKpJ,UAAWuB,EAAG,OAAQ,SAA3B,UACI,sBAAKvB,UAAWC,IAAM8C,UAAtB,UACI,qBAAK/C,UAAWC,IAAM+C,SAAtB,SAAiC9B,EAAUgI,EAAQ/H,SACnD,qBAAKnB,UAAWC,IAAMgD,SAAtB,qBACA,qBAAKjD,UAAWC,IAAMiD,SAAtB,SAAkD,KAAjBgG,EAAQnF,KAAcmF,EAAQnF,KAAO,WACtE,sBAAK/D,UAAWC,IAAMkD,QAAtB,qBACS+F,EAAQxD,SADjB,gBAESwD,EAAQvD,SAFjB,gBAGSuD,EAAQtD,SAHjB,QAKA,qBAAK5F,UAAWC,IAAMsD,KAAtB,sCAEJ,qBAAK1C,IAAG,8BAAyBqI,EAAQ/H,MAAjC,QAA8CL,IAAI,uCAG9D,sBAAKd,UAAWuB,EAAG,OAAQ,SAA3B,UACI,sBAAKvB,UAAWC,IAAM8C,UAAtB,UACI,qBAAK/C,UAAWC,IAAM+C,SAAtB,SAAiC9B,EAAUgI,EAAQ/H,SACnD,qBAAKnB,UAAWC,IAAMgD,SAAtB,yBACA,qBAAKjD,UAAWC,IAAMiD,SAAtB,SAAkD,KAAjBgG,EAAQnF,KAAcmF,EAAQnF,KAAO,WACtE,sBAAK/D,UAAWC,IAAMkD,QAAtB,qBACS+F,EAAQxD,SADjB,gBAESwD,EAAQvD,SAFjB,gBAGSuD,EAAQtD,SAHjB,QAKA,qBAAK5F,UAAWC,IAAMsD,KAAtB,sCAEJ,qBAAK1C,IAAG,8BAAyBqI,EAAQ/H,MAAjC,QAA8CL,IAAI,0CAIlE,qBAAKd,UAAWC,IAAMoJ,QAAtB,SACI,gCACI,kCACI,+BACI,8CACA,6BAAKH,EAAQnF,UAEjB,+BACI,0DACA,6BAAKmF,EAAQ3C,WAEjB,+BACI,2DACA,6BAAK2C,EAAQN,UAEjB,+BACI,0DACA,6BAAKM,EAAQrC,kBAM7B,wBAAQjG,QA1EM,WAClBc,EAAQwE,KAAK,sBAyEuBlG,UAAU,aAAaC,MAAO,CAACmF,gBAAgB8D,EAAQ/H,OAAvF,oE,oEC7GNmI,GAAajI,YAAH,2YAmJDkI,I,MAAAA,GAzHf,YAA6C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBACflI,EAAKC,IAAWC,KAAKxB,MAK3B,EAAwCE,mBAASqJ,EAAMrI,OAAvD,mBAAOuI,EAAP,KAAqBC,EAArB,KACA,EAA4BxJ,mBAASqJ,GAArC,mBAAOnE,EAAP,KAAeuE,EAAf,KAMA,EAAoB1C,YAAaoC,GAAY,CAAEnC,YAyB/C,WACIlB,MAAM,qDACNwD,GAAgB,MA3BbI,EAAP,oBAiCMC,EAAe,SAACxF,GAClB,IAAMyF,EAAQ,2BACP1E,GADO,kBAETf,EAAEC,OAAOR,KAAMO,EAAEC,OAAOC,QAG7BoF,EAAUG,IAGRC,EAAc,WACZpK,OAAO8I,QAAQ,2EAzCvB,WACI,IAAMuB,EAAc,CAChB3E,QAAQD,EAAOC,QACfnE,MAAMkE,EAAOlE,MACbsE,MAAMJ,EAAOI,MACbC,SAASL,EAAOK,SAChBC,SAASN,EAAOM,SAChBC,SAASP,EAAOO,SAChB7B,KAAKsB,EAAOtB,KACZwC,MAAMlB,EAAOkB,MACbqC,KAAKvD,EAAOuD,KACZ/B,MAAMxB,EAAOwB,MACbhB,OAAOR,EAAOQ,QAGlBgE,EAAU,CACNhB,UAAU,CACN1G,GAAGqH,EAAMrH,GACT2G,MAAMmB,KAwBVC,IAUFC,EAAiBC,uBAAY,gBAAGjJ,EAAH,EAAGA,MAAH,OAC/B,kCACI,uBACI2C,KAAK,QACLC,KAAK,QACLS,MAAOrD,EACPkD,SAAU,SAACC,GACPqF,EAAgBxI,GAChB2I,EAAaxF,MAGrB,sBAAMtE,UAAWC,KAAMoK,iBAE9B,IAEKC,EAAWF,uBAAY,gBAAGJ,EAAH,EAAGA,YAAavE,EAAhB,EAAgBA,MAAOjB,EAAvB,EAAuBA,MAAOT,EAA9B,EAA8BA,KAAMD,EAApC,EAAoCA,KAApC,OACzB,sBAAK9D,UAAWC,KAAMqK,SAAtB,UACI,4BAAI7E,IACJ,uBACI3B,KAAMA,EACNU,MAAOA,EACPT,KAAMA,EACNM,SAAUyF,EACV9J,UAAWC,KAAMuH,aAErB,wBAAQ5G,QAASoJ,EAAa/J,MAAO,CAACmF,gBAAgBsE,GAAtD,+BAEP,IAGD,OACI,sBAAK1J,UAAWC,KAAMsJ,OAAtB,UACI,2DACA,sBAAKvJ,UAAWC,KAAMqK,SAAtB,UACI,0DACA,sBAAKtK,UAAWC,KAAMwD,SAAtB,UACI,cAAC0G,EAAD,CAAgBhJ,MAAO,QACvB,cAACgJ,EAAD,CAAgBhJ,MAAO,SACvB,cAACgJ,EAAD,CAAgBhJ,MAAO,UACvB,cAACgJ,EAAD,CAAgBhJ,MAAO,iBAG/B,cAACmJ,EAAD,CAAUN,YAAaA,EAAavE,MAAO,4BAASjB,MAAOa,EAAOI,MAAO1B,KAAM,QAASD,KAAM,SAC9F,cAACwG,EAAD,CAAUN,YAAaA,EAAavE,MAAO,yCAAYjB,MAAOa,EAAOK,SAAU3B,KAAM,WAAYD,KAAM,SACvG,cAACwG,EAAD,CAAUN,YAAaA,EAAavE,MAAO,yCAAYjB,MAAOa,EAAOM,SAAU5B,KAAM,WAAYD,KAAM,SACvG,cAACwG,EAAD,CAAUN,YAAaA,EAAavE,MAAO,yCAAYjB,MAAOa,EAAOO,SAAU7B,KAAM,WAAYD,KAAM,SACvG,cAACwG,EAAD,CAAUN,YAAaA,EAAavE,MAAO,kCAAUjB,MAAOa,EAAOtB,KAAMA,KAAM,OAAQD,KAAM,SAC7F,cAACwG,EAAD,CAAUN,YAAaA,EAAavE,MAAO,kCAAUjB,MAAOa,EAAOkB,MAAOxC,KAAM,QAASD,KAAM,WAC/F,cAACwG,EAAD,CAAUN,YAAaA,EAAavE,MAAO,kCAAUjB,MAAOa,EAAOuD,KAAM7E,KAAM,OAAQD,KAAM,SAC7F,wBAAQ9D,UAAWuB,EAAG,aAAc,SAAU,QAASX,QAAS,kBAAM6I,GAAgB,IAAtF,2CC7INc,GAAalJ,YAAH,yTAmBVmJ,GAAenJ,YAAH,oIAoIHoJ,OAvHf,WACI,IAAMlJ,EAAKC,IAAWC,KAAKxB,KAErB2B,GADUD,cACHE,aAAaC,QAAQ,SAKlC,EAA4C3B,mBAAS,IAArD,mBAAOuK,EAAP,KAAuBC,EAAvB,KACA,EAAwCxK,oBAAS,GAAjD,mBAAOyK,EAAP,KAAqBnB,EAArB,KAgBQ/F,EAASlB,YAAS+H,IAAlB7G,KAGR,EAAsBwD,YAAYsD,GAC9B,CACIrD,YAVqB,kBAAMlB,MAAM,sDAWjC4E,eAAgB,CACZ,CAAEC,MAAOP,OAJdQ,EAAP,oBASMC,EAAS,OAAGtH,QAAH,IAAGA,OAAH,EAAGA,EAAMuH,OAAOnG,QAAO,SAAA0E,GAAK,OAAIA,EAAMlE,UAAYC,KAAKC,MAAM5D,GAAMA,KAAKO,MAEvF,OACI,qCACI,sBAAKnC,UAAWC,IAAMwK,UAAtB,UACI,oCAAkBS,GAAbF,GAA0BA,EAAU,GAAGjH,KAA5C,2CAEA,oBAAI/D,UAAWC,IAAMkL,KAArB,SAEWH,GAAgC,IAAnBA,EAAUI,OAGtBJ,EAAU5H,KAAI,SAACoG,EAAOlG,GAAR,OACV,+BACI,sBAAKtD,UAAWC,IAAMmJ,WAAtB,UACI,sBAAKpJ,UAAWuB,EAAG,OAAQ,SAA3B,UACI,sBAAKvB,UAAWC,IAAM8C,UAAtB,UACI,qBAAK/C,UAAWC,IAAM+C,SAAtB,SAAiC9B,EAAUsI,EAAMrI,SACjD,qBAAKnB,UAAWC,IAAMgD,SAAtB,qBACA,qBAAKjD,UAAWC,IAAMiD,SAAtB,SAAiD,KAAhBsG,EAAM/D,MAAe+D,EAAM/D,MAAQ,WACpE,sBAAKzF,UAAWC,IAAMkD,QAAtB,qBACSqG,EAAM9D,SADf,gBAES8D,EAAM7D,SAFf,gBAGS6D,EAAM5D,SAHf,QAKA,qBAAK5F,UAAWC,IAAMsD,KAAtB,sCAEJ,qBAAK1C,IAAG,8BAAyB2I,EAAMrI,MAA/B,QAA4CL,IAAI,uCAG5D,sBAAKd,UAAWuB,EAAG,OAAQ,SAA3B,UACI,sBAAKvB,UAAWC,IAAM8C,UAAtB,UACI,qBAAK/C,UAAWC,IAAM+C,SAAtB,SAAiC9B,EAAUsI,EAAMrI,SACjD,qBAAKnB,UAAWC,IAAMgD,SAAtB,yBACA,qBAAKjD,UAAWC,IAAMiD,SAAtB,SAAiD,KAAhBsG,EAAM/D,MAAe+D,EAAM/D,MAAQ,WACpE,sBAAKzF,UAAWC,IAAMkD,QAAtB,qBACSqG,EAAM9D,SADf,gBAES8D,EAAM7D,SAFf,gBAGS6D,EAAM5D,SAHf,QAKA,qBAAK5F,UAAWC,IAAMsD,KAAtB,sCAEJ,qBAAK1C,IAAG,8BAAyB2I,EAAMrI,MAA/B,QAA4CL,IAAI,0CAIhE,sBAAKd,UAAWC,IAAMoJ,QAAtB,UACI,8BACI,gDACA,+BAAOG,EAAMzF,UAEjB,8BACI,4DACA,+BAAOyF,EAAMjD,WAEjB,8BACI,gDACA,+BAAOiD,EAAMZ,UAEjB,8BACI,4DACA,iCAAOY,EAAM3C,MAAb,eAEJ,sBAAK7G,UAAWC,IAAMoL,OAAtB,UACI,wBAAQrL,UAAU,aAAaY,QAAS,kBAvFzD,SAAC4I,GACpBmB,EAAkBnB,GAClBC,GAAgB,GAqFkE6B,CAAe9B,IAAQvJ,MAAO,CAACmF,gBAAgBoE,EAAMrI,OAAnG,sCACA,wBAAQnB,UAAWuB,EAAG,aAAc,UAAWX,QAAS,kBAnFtEuB,EAmF6FqH,EAAMrH,GAnF5F4I,EAAY,CAAElC,UAAU,CAAC1G,GAAIA,KAArC,IAACA,GAmFc,8CApDHmB,MAHX,iGAiEI,IAAjBsH,IAA6C,KAAnBF,GAC3B,cAAC,GAAD,CAAQlB,MAAOkB,EAAgBjB,gBAAiBA,Q,uCCrFjD8B,OAvDf,WAKE,IAAMC,EAAS,IAAIC,KAAa,CAC9BC,IAAK,8BACLC,MAAO,IAAIC,OA6Bb,OA1BkBC,cAAQ,YAAsC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACtCD,GACFA,EAAc1I,KAAI,gBAAG4I,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAvB,OAChBC,QAAQC,IAAR,oCAC+BJ,EAD/B,uBACqDC,EADrD,mBACyEC,OAGzEH,GAAcI,QAAQC,IAAR,2BAAgCL,OAepDlK,aAAakE,QAAQ,OAAQR,KAAKS,UAPrB,CACTpE,KAAK,CACLO,GAAG,EACHkK,MAAM,YACN5F,QAAQ,mDAQV,cAAC6F,GAAA,EAAD,CAAgBd,OAAQA,EAAxB,SACE,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOe,OAAK,EAACL,KAAK,UAAUM,UAAWlL,IACvC,cAAC,IAAD,CAAO4K,KAAK,gBAAgBM,UAAWpG,IACvC,cAAC,IAAD,CAAO8F,KAAK,mBAAmBM,UAAWvD,IAC1C,cAAC,IAAD,CAAOiD,KAAK,oBAAoBM,UAAW/B,UAGjD,cAAC,EAAD,U,MC3DVgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U,mBCT1BvN,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,UAAY,yBAAyB,WAAa,0BAA0B,aAAe,4BAA4B,QAAU,uBAAuB,UAAY,yBAAyB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,uBAAuB,OAAS,sBAAsB,SAAW,wBAAwB,QAAU,uBAAuB,QAAU,uBAAuB,MAAQ,uB,mBCAzhBD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,UAAY,6BAA6B,SAAW,4BAA4B,SAAW,4BAA4B,SAAW,4BAA4B,QAAU,2BAA2B,KAAO,wBAAwB,WAAa,8BAA8B,KAAO,wBAAwB,QAAU,2BAA2B,OAAS,4B,mBCAtfD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wBAAwB,UAAY,4BAA4B,SAAW,2BAA2B,SAAW,2BAA2B,SAAW,2BAA2B,QAAU,0BAA0B,KAAO,uBAAuB,WAAa,6BAA6B,QAAU,4B,mBCAtaD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,yBAAyB,WAAa,2BAA2B,SAAW,yBAAyB,UAAY,0BAA0B,OAAS,yB,mBCAjND,EAAOC,QAAU,CAAC,SAAW,yBAAyB,KAAO,qBAAqB,aAAe,6BAA6B,SAAW,yBAAyB,QAAU,0B,mBCA5KD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB","file":"static/js/main.cd24f622.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"home_Home__3ss5e\",\"Textbox\":\"home_Textbox__PTBl_\",\"Goodsbox\":\"home_Goodsbox__2XbOU\",\"Item\":\"home_Item__SezNP\",\"Item1\":\"home_Item1__3uvCz\",\"Item2\":\"home_Item2__3bpxv\",\"InnerText\":\"home_InnerText__3DJvZ\",\"ColorNum\":\"home_ColorNum__3vJtt\",\"ItemName\":\"home_ItemName__1m-JH\",\"CodeName\":\"home_CodeName__2jdMt\",\"Hashtag\":\"home_Hashtag__2Q2yK\",\"Size\":\"home_Size__rnJxG\",\"BracketLeft\":\"home_BracketLeft__2HXvY\",\"BracketRight\":\"home_BracketRight__2-It7\",\"Colorbox\":\"home_Colorbox__39sio\",\"CustomWrapper\":\"home_CustomWrapper__1pdAC\",\"InputGoodsnameWrap\":\"home_InputGoodsnameWrap__2xzB_\",\"InputGoodsname\":\"home_InputGoodsname__3BiEz\",\"BreacketLeftBlack\":\"home_BreacketLeftBlack__dQ-nk\",\"BreacketRightBlack\":\"home_BreacketRightBlack__OYUQ9\",\"InputHashtagWrap\":\"home_InputHashtagWrap__2Ln77\",\"InputHashtag\":\"home_InputHashtag__1izhQ\"};","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// 페이지 이동시 화면 최상단에서 시작하게 동작하기 위한 컴포넌트\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default ScrollToTop;","import React from 'react';\r\nimport style from './Wrapper.module.css'\r\n\r\nfunction Wrapper({children }) {\r\n    return (\r\n        <div className={style.Wrapper}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useState } from 'react';\r\nimport style from './Header.module.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    const [openNav, setOpenNav] = useState(false);\r\n\r\n    const navOpener = () => setOpenNav(true);\r\n    const navCloser = () => setOpenNav(false);\r\n\r\n    return (\r\n        <>\r\n            <div className={style.HeaderPc}>\r\n                <Link to=\"/beauty\" className={style.Logo}>MAKE THE BEAUTY</Link>\r\n                <Link to=\"/beauty\">ORDER</Link>\r\n                <Link to=\"/beauty/orderList\">ORDER LIST</Link>\r\n            </div>\r\n\r\n            <div className={style.HeaderMobile}>\r\n                <Link to=\"/beauty\" className={style.Logo}>MAKE THE BEAUTY</Link>\r\n                <button className={style.NavOpen} onClick={navOpener}>\r\n                    <img src=\"/images/common/hamburger.svg\" alt=\"open navigation\"/>\r\n                </button>\r\n\r\n                <nav isshow={openNav===false ? '' : 'active'}>\r\n                    <button className={style.NavClose} onClick={navCloser}>\r\n                        <img src=\"/images/common/hamburger_close.svg\" alt=\"close navigation\" />\r\n                    </button>\r\n                    <Link onClick={navCloser} to=\"/\">ORDER</Link>\r\n                    <Link onClick={navCloser} to=\"/orderList\">ORDER LIST</Link>\r\n\r\n                    <p>MAKE THE BEAUTY</p>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport style from './Footer.module.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className={style.Footer}>\r\n            © 2021 BY WEBCOGY. ALL RIGHTS RESERVED\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","export function Colorcode(color){\r\n    if( color === \"red\" ) {\r\n        return \"#ff0000\"\r\n    }else if( color === \"blue\" ){\r\n        return \"#0000ff\"\r\n    }else if( color === \"green\" ){\r\n        return \"#008000\"\r\n    }else if( color === \"violet\" ){\r\n        return \"#ee82ee\"\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport style from './home.module.css';\r\nimport classNames from 'classnames/bind';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { useQuery, useMutation, gql } from '@apollo/client';\r\nimport {Colorcode} from '../../util/Colorcode'\r\n\r\n\r\n/***********************************\r\n * graphQL start\r\n ***********************************/\r\nconst GET_COLORS = gql`\r\n    query{\r\n        colors{\r\n            id\r\n            color_name\r\n        }\r\n    }\r\n`;\r\n\r\n/***********************************\r\n * graphQL end\r\n ***********************************/\r\n\r\n\r\n\r\nfunction Home() {\r\n    const cx = classNames.bind(style); // classNames\r\n    const history = useHistory(); // router\r\n    const user = localStorage.getItem('user') // for user_id\r\n\r\n    /***********************************\r\n     * Set states\r\n     ***********************************/\r\n    const [selectedColor, setSelectedColor] = useState('red'); // for color\r\n    const [productName, setProductName] = useState(''); // for title\r\n    const [hashtag, setHashtag] = useState([ // for hashtag1,2,3\r\n        {\r\n            id:0,\r\n            tag_name:'',\r\n        },\r\n        {\r\n            id:1,\r\n            tag_name:'',\r\n        },\r\n        {\r\n            id:2,\r\n            tag_name:'',\r\n        },\r\n    ]);\r\n    \r\n\r\n    /***********************************\r\n     * Function\r\n     ***********************************/\r\n    // 색상 fn\r\n    const clickColor = (color) => {\r\n        setSelectedColor(color);\r\n    }\r\n\r\n    // 상품이름 fn\r\n    const changeProductName = (e) => {\r\n        setProductName(e.target.value)\r\n    }\r\n\r\n    // 해시태그1,2,3 fn\r\n    const changeHashtag = (e, idx) => {\r\n        const { value } = e.target;\r\n\r\n        // input value 저장\r\n        let getHashtag = [\r\n            ...hashtag.filter(h => h.id !== idx),\r\n            {\r\n                id:idx,\r\n                tag_name: value\r\n            }\r\n        ];\r\n\r\n        // id 기준으로 오름차순 정렬\r\n        getHashtag.sort((a,b) => a.id-b.id)\r\n\r\n        setHashtag(getHashtag)\r\n    }\r\n\r\n\r\n    const clickSubmit = () => {\r\n        const inputs = {\r\n            user_id:JSON.parse(user).user.id,\r\n            color:selectedColor,\r\n            title:productName,\r\n            hashtag1:hashtag[0].tag_name,\r\n            hashtag2:hashtag[1].tag_name,\r\n            hashtag3:hashtag[2].tag_name,\r\n            is_pay:\"n\"\r\n        }\r\n        // 세션에 주문정보 임시저장\r\n        sessionStorage.setItem('tempOrder', JSON.stringify(inputs) );\r\n\r\n        alert(`제품 구성을 마치셨군요 ! 주문화면으로 이동합니다.`)\r\n        history.push(\"/order\")\r\n    }\r\n\r\n\r\n\r\n    /***********************************\r\n     * apollo client\r\n     ***********************************/\r\n    const get_colors = useQuery(GET_COLORS);\r\n\r\n    if (get_colors.loading) return <p className=\"loading\">Loading...</p>\r\n    if (get_colors.error) return <p className=\"error\">Error :(</p>\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.Home}>\r\n\r\n            <div className={style.Textbox}>\r\n                <h2>상품을 내 마음대로 꾸며보세요!</h2>\r\n                <p>취향에 맞는 향은 물론 알록달록한 샴푸색상으로 욕실 분위기를 바꿔보세요 !</p>\r\n            </div>\r\n            \r\n            <div className={style.Goodsbox}>\r\n                <img src={'/images/main/bracket_left_gray.svg'} className={style.BracketLeft} />\r\n                <img src={'/images/main/bracket_right_gray.svg'} className={style.BracketRight} />\r\n\r\n                <div className={cx('Item', 'Item1')}>\r\n                    <div className={style.InnerText}>\r\n                        <p className={style.ColorNum}>{Colorcode(selectedColor)}</p>\r\n                        <p className={style.ItemName}>SHAMPOO</p>\r\n                        <p className={style.CodeName}>{productName !== '' ? productName : 'BEAUTY'}</p>\r\n                        <p className={style.Hashtag}>\r\n                            {\r\n                                hashtag.map((tag, i) => \r\n                                    tag.tag_name !== '' &&\r\n                                    <span key={i}>\r\n                                        {`#${tag.tag_name} `}\r\n                                    </span>\r\n                                )\r\n                            }\r\n                        </p>\r\n                        <p className={style.Size}>300ml / 10.14 fl. oz.</p>\r\n                    </div>\r\n                    <img src={`/images/goods/goods_${selectedColor}.png`} alt=\"상품이미지1\" />\r\n                </div>\r\n\r\n                <div className={cx('Item', 'Item2')}>\r\n                    <div className={style.InnerText}>\r\n                        <p className={style.ColorNum}>{Colorcode(selectedColor)}</p>\r\n                        <p className={style.ItemName}>CONDITIONER</p>\r\n                        <p className={style.CodeName}>{productName !== '' ? productName : 'BEAUTY'}</p>\r\n                        <p className={style.Hashtag}>\r\n                            {\r\n                                hashtag.map((tag, i) => \r\n                                    tag.tag_name !== '' &&\r\n                                    <span key={i}>\r\n                                        {`#${tag.tag_name} `}\r\n                                    </span>\r\n                                )\r\n                            }\r\n                        </p>\r\n                        <p className={style.Size}>300ml / 10.14 fl. oz.</p>\r\n                    </div>\r\n                    <img src={`/images/goods/goods_${selectedColor}.png`} alt=\"상품이미지2\" />\r\n                </div>\r\n\r\n                <div className={style.CustomWrapper}>\r\n                    <ul className={style.Colorbox}>\r\n                        {\r\n                            get_colors.data.colors.map((color, i) => {\r\n                                return (\r\n                                    <li key={color.id}>\r\n                                        <label onClick={() => clickColor(color.color_name)}>\r\n                                            <input type=\"radio\" className=\"color_shampoo\" name=\"color_shampoo\" />\r\n                                            <div style={{background:color.color_name}}></div>\r\n                                        </label>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n\r\n                    <div className={style.InputGoodsnameWrap}>\r\n                        <img src=\"/images/main/bracket_left_black.svg\" className={style.BreacketLeftBlack} />\r\n                        <img src=\"/images/main/bracket_right_black.svg\" className={style.BreacketRightBlack} />\r\n                        <input type={\"text\"} className={style.InputGoodsname} onChange={changeProductName}  placeholder={\"상품이름\"} />\r\n                    </div>\r\n\r\n\r\n                    <div className={style.InputHashtagWrap}>\r\n                        {\r\n                            hashtag.map((tag, i) => {\r\n\r\n                                return (\r\n                                    <label key={i} className={style.InputHashtag}>\r\n                                        <img src=\"/images/main/hashtag.svg\" />\r\n                                        <input type=\"text\" name={`hashtag${i}`} placeholder=\"해시태그\" onChange={(e) => changeHashtag(e, i)} />\r\n                                    </label>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    \r\n                    <button\r\n                        className=\"btn_common\"\r\n                        style={{backgroundColor:`${selectedColor}`}}\r\n                        onClick={clickSubmit}\r\n                    >\r\n                        주문화면으로 가기\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useRef, useState } from 'react';\r\nimport style from './Order.module.css';\r\nimport classNames from 'classnames/bind';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useQuery, useMutation, gql } from '@apollo/client';\r\nimport DaumPostcode from 'react-daum-postcode';\r\n\r\n\r\n/***********************************\r\n * graphQL start\r\n ***********************************/\r\nconst POST_ORDER = gql`\r\n    mutation PostOrder($input: PostOrderInput!){\r\n        postOrder(input: $input){\r\n            user_id,\r\n            color,\r\n            title,\r\n            hashtag1,\r\n            hashtag2,\r\n            hashtag3,\r\n            name,\r\n            phone,\r\n            addr,\r\n            price,\r\n            is_pay,\r\n        }\r\n    },\r\n`;\r\n/***********************************\r\n * graphQL end\r\n ***********************************/\r\n\r\n\r\nfunction Order() {\r\n    const cx = classNames.bind(style);\r\n    const history = useHistory(); // router\r\n    const user = localStorage.getItem('user') // for user_id\r\n\r\n\r\n    /***********************************\r\n     * states\r\n     ***********************************/\r\n    const product = JSON.parse(sessionStorage.getItem('tempOrder'));\r\n    const [name, setName] = useState(''); // 이름\r\n    const [phone, setPhone] = useState(''); // 폰\r\n    const [address, setAddress] = useState(''); // 주소 input\r\n    const [defailAddress, setDefailAddress] = useState(''); // 상세주소 input\r\n    const [price, setPrice] = useState('29900'); // 결제금액\r\n\r\n    \r\n    /***********************************\r\n     * daum API\r\n     ***********************************/\r\n    const addrInputRef = useRef(); // 주소 input DOM\r\n    const [isShowPostCode, setIsShowPostCode] = useState(false); // 주소 API UI\r\n    \r\n    const execPostcode = () => {\r\n        isShowPostCode === true \r\n        ? setIsShowPostCode(false)\r\n        : setIsShowPostCode(true)\r\n    }\r\n\r\n    // 주소 선택시 실행\r\n    const handlePostcodeComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = ''; \r\n        \r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n    \r\n        addrInputRef.current.value=fullAddress; // 주소 input에 삽입\r\n        setAddress(fullAddress); // 주소 value\r\n        setIsShowPostCode(false); // hide 다음주소 UI\r\n    }\r\n\r\n\r\n    /***********************************\r\n     * apollo client & functions\r\n     ***********************************/\r\n    const postOrderCompleted = (data) => {\r\n        history.push(\"/orderEnd\")\r\n    }\r\n\r\n    const [postOrder] = useMutation(\r\n        POST_ORDER ,{ onCompleted: postOrderCompleted }\r\n    )\r\n\r\n    const execPostOrder = () => {\r\n        // validation check\r\n        if( !name ){\r\n            alert('이름을 입력해주세요')\r\n            return\r\n        }\r\n        else if( !phone ){\r\n            alert('전화번호를 입력해주세요')\r\n            return\r\n        }\r\n        else if( !address ){\r\n            alert('주소를 입력해주세요')\r\n            return\r\n        }\r\n        else if( !defailAddress ){\r\n            alert('상세 주소를 입력해주세요')\r\n            return\r\n        }\r\n\r\n        if( window.confirm(`주문하시겠어요 ?`) ){\r\n            const inputs = {\r\n                user_id:JSON.parse(user).user.id,\r\n                color:product.color,\r\n                title:product.title,\r\n                hashtag1:product.hashtag1,\r\n                hashtag2:product.hashtag2,\r\n                hashtag3:product.hashtag3,\r\n                is_pay:\"y\",\r\n                name:name,\r\n                phone:Number(phone),\r\n                addr:`${address}, ${defailAddress}`,\r\n                price:Number(price)\r\n            }\r\n\r\n            postOrder(\r\n                { variables:{input: inputs} },\r\n            )\r\n            //.then(e =>  // sconsole.log(e) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.Order}>\r\n            <div className={style.Left}>\r\n                <h2>결제</h2>\r\n                <div className={style.Title}>주문자 / 배송지 정보</div>\r\n                <div className={style.InputName}>이름</div>\r\n                <input type=\"text\" className={style.InputStyle} placeholder=\"이름 입력\" onChange={(e) => setName(e.target.value)} />\r\n\r\n                <div className={style.InputName}>휴대폰 번호</div>\r\n                <input type=\"number\" className={style.InputStyle} placeholder=\"휴대폰 번호 입력\" onChange={(e) => setPhone(e.target.value)} />\r\n\r\n\r\n                <div className={style.InputName}>배송지 주소</div>\r\n                <div className={style.InputAddress}>\r\n                    <input type=\"text\" className={cx('InputStyle', 'Address')} placeholder=\"주소 입력\" readOnly ref={addrInputRef} />\r\n                    {\r\n                        isShowPostCode === true && <DaumPostcode onComplete={handlePostcodeComplete} /> \r\n                    }\r\n\r\n                    <button className={style.BtnSearch} onClick={execPostcode}>\r\n                        <img src=\"/images/pay/ico_search.svg\" alt=\"주소 버튼 이미지\" />\r\n                    </button> \r\n                </div>\r\n                <input type=\"text\" className={style.InputStyle} placeholder=\"상세주소 입력\" onChange={(e) => setDefailAddress(e.target.value)} />\r\n            </div>\r\n            <div className={style.Right}>\r\n                <div className={style.OrderInfoBox}>\r\n                    <p className={style.TitlePay}>\r\n                        <img src=\"/images/pay/ico_card.svg\" alt=\"\" />\r\n                        결제 정보\r\n                    </p>\r\n                    <ul className={style.PayList}>\r\n                        <li>\r\n                            <span>제품</span>\r\n                            <span>샴푸, 컨디셔너 300ml</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>색상</span>\r\n                            <span style={{color:product.color}}>{product.color}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>상품이름</span>\r\n                            <span>{product.title}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>해시태그1</span>\r\n                            <span>{product.hashtag1}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>해시태그2</span>\r\n                            <span>{product.hashtag2}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>해시태그3</span>\r\n                            <span>{product.hashtag3}</span>\r\n                        </li>\r\n                        <li className={style.Total}>\r\n                            <b>결제하실 금액</b>\r\n                            <b>29,900원</b>\r\n                        </li>\r\n                    </ul>\r\n                    <button className={style.BtnPay} onClick={execPostOrder}>결제하기</button>\r\n                    \r\n                    <p className={style.SubText}>결제를 진행하면 결제서비스 약관 및 배송을 위한<br />\r\n                    개인정보 제공 및 위탁에 동의하는 것으로 간주합니다.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Order;\r\n","import React, { useEffect } from 'react';\r\nimport style from './OrderEnd.module.css';\r\nimport classNames from 'classnames/bind';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useQuery, useMutation, gql } from '@apollo/client';\r\nimport { Colorcode } from '../../util/Colorcode'\r\n\r\n/***********************************\r\n * graphQL start\r\n ***********************************/\r\nconst GET_LAST_ORDER = gql`\r\n    query GetLastOrder($user_id: Int!){\r\n        lastOrder(user_id: $user_id){\r\n            user_id\r\n            color\r\n            title\r\n            hashtag1\r\n            hashtag2\r\n            hashtag3\r\n            name\r\n            phone\r\n            addr\r\n            price\r\n            is_pay\r\n        }\r\n    }\r\n`;\r\n/***********************************\r\n* graphQL end\r\n***********************************/\r\n\r\n\r\n\r\nfunction OrderEnd() {\r\n    useEffect(() => {\r\n        // sessionStorage.removeItem('tempOrder'); // 주문시 필요했던 주문정보 삭제\r\n    }, []);\r\n\r\n    const cx = classNames.bind(style); // classNames\r\n    const history = useHistory(); // router\r\n    const user = localStorage.getItem('user') // for user_id\r\n\r\n    /***********************************\r\n     * functions\r\n     ***********************************/\r\n    const moveOrderList = () => {\r\n        history.push(\"/beauty/orderList\")\r\n    }\r\n\r\n    /***********************************\r\n     * apollo client\r\n     ***********************************/\r\n    const { data, loading, error } = useQuery(GET_LAST_ORDER, {\r\n        variables:{user_id:JSON.parse(user).user.id},\r\n    });\r\n    const proudct = data?.lastOrder;\r\n\r\n    if(loading) return <div>loading...</div>\r\n    if(!proudct || error) return <div>error :(</div>\r\n\r\n    return (\r\n        <div className={style.OrderEnd}>\r\n            <h2>주문이 완료되었습니다.</h2>\r\n        \r\n            <div className={style.Productbox}>\r\n                <div className={cx('Item', 'Item1')}>\r\n                    <div className={style.InnerText}>\r\n                        <div className={style.ColorNum}>{Colorcode(proudct.color)}</div>\r\n                        <div className={style.ItemName}>SHAMPOO</div>\r\n                        <div className={style.CodeName}>{proudct.name !== '' ? proudct.name : 'BEAUTY'}</div>\r\n                        <div className={style.Hashtag}>\r\n                            {`#${proudct.hashtag1} `}\r\n                            {`#${proudct.hashtag2} `}\r\n                            {`#${proudct.hashtag3} `}\r\n                        </div>\r\n                        <div className={style.Size}>300ml / 10.14 fl. oz.</div>\r\n                    </div>\r\n                    <img src={`/images/goods/goods_${proudct.color}.png`} alt=\"상품이미지1\" />\r\n                </div>\r\n\r\n                <div className={cx('Item', 'Item2')}>\r\n                    <div className={style.InnerText}>\r\n                        <div className={style.ColorNum}>{Colorcode(proudct.color)}</div>\r\n                        <div className={style.ItemName}>CONDITIONER</div>\r\n                        <div className={style.CodeName}>{proudct.name !== '' ? proudct.name : 'BEAUTY'}</div>\r\n                        <div className={style.Hashtag}>\r\n                            {`#${proudct.hashtag1} `}\r\n                            {`#${proudct.hashtag2} `}\r\n                            {`#${proudct.hashtag3} `}\r\n                        </div>\r\n                        <div className={style.Size}>300ml / 10.14 fl. oz.</div>\r\n                    </div>\r\n                    <img src={`/images/goods/goods_${proudct.color}.png`} alt=\"상품이미지2\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.Userbox}>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>이름</th>\r\n                            <td>{proudct.name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>전화번호</th>\r\n                            <td>{proudct.phone}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>주문 주소</th>\r\n                            <td>{proudct.addr}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>결제금액</th>\r\n                            <td>{proudct.price}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <button onClick={moveOrderList} className=\"btn_common\" style={{backgroundColor:proudct.color}}>모든 주문목록 보기</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderEnd;\r\n","import classNames from 'classnames';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport style from './Modify.module.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useQuery, useMutation, gql } from '@apollo/client';\r\n\r\n\r\n/***********************************\r\n * graphQL start\r\n ***********************************/\r\nconst EDIT_ORDER = gql`\r\n    mutation EditOrder($id: ID!, $input: PostOrderInput!){\r\n        editOrder(id:$id, input: $input){\r\n            id\r\n            user_id,\r\n            color,\r\n            title,\r\n            hashtag1,\r\n            hashtag2,\r\n            hashtag3,\r\n            name,\r\n            phone,\r\n            addr,\r\n            price,\r\n            is_pay\r\n        }\r\n    },\r\n`;\r\n/***********************************\r\n* graphQL end\r\n***********************************/\r\n\r\n\r\n// refetch는 orderlist 에서 해주고 있기 때문에, 변경 값이 화면에 갱신되므로 닫음.\r\n// let refetchOrder; // refetch variables\r\n\r\nfunction Modify({ order, setIsShowModify }) {\r\n    const cx = classNames.bind(style); // classNames\r\n\r\n    /***********************************\r\n     * states\r\n     ***********************************/\r\n    const [colorChecked, setColorChecked] = useState(order.color);\r\n    const [inputs, setInputs] = useState(order);\r\n\r\n    /***********************************\r\n     * apollo client\r\n     ***********************************/\r\n    // const { data, refetch } = useQuery(GET_ORDERS);\r\n    const [editOrder] = useMutation( EDIT_ORDER, { onCompleted: editOrderCompleted })\r\n    \r\n    function execEditOrder(){\r\n        const result_data = {\r\n            user_id:inputs.user_id,\r\n            color:inputs.color,\r\n            title:inputs.title,\r\n            hashtag1:inputs.hashtag1,\r\n            hashtag2:inputs.hashtag2,\r\n            hashtag3:inputs.hashtag3,\r\n            name:inputs.name,\r\n            phone:inputs.phone,\r\n            addr:inputs.addr,\r\n            price:inputs.price,\r\n            is_pay:inputs.is_pay\r\n        }\r\n\r\n        editOrder({\r\n            variables:{\r\n                id:order.id, \r\n                input:result_data\r\n            }\r\n        })\r\n    }\r\n\r\n    function editOrderCompleted(){\r\n        alert('상품을 수정했어요')\r\n        setIsShowModify(false)\r\n    }\r\n\r\n    /***********************************\r\n     * functions\r\n     ***********************************/\r\n    const changeInputs = (e) => {\r\n        const new_data = {\r\n            ...inputs,\r\n            [e.target.name]:e.target.value\r\n        }\r\n        \r\n        setInputs(new_data)\r\n    }\r\n\r\n    const clickSubmit = () => {\r\n        if( window.confirm('이 정보로 수정하시겠어요 ?') ){\r\n            execEditOrder();\r\n            // refetchOrder = refetch;\r\n            // refetchOrder();\r\n        }\r\n    }\r\n\r\n\r\n    /***********************************\r\n     * components\r\n     ***********************************/\r\n    const InputColorCode = useCallback(({ color }) =>\r\n        <label>\r\n            <input \r\n                type=\"radio\" \r\n                name=\"color\" \r\n                value={color} \r\n                onChange={(e) => {\r\n                    setColorChecked(color);\r\n                    changeInputs(e);\r\n                }}\r\n            />\r\n            <span className={style.ColorCode}></span>\r\n        </label>\r\n    ,[]);\r\n\r\n    const Inputbox = useCallback(({ clickSubmit, title, value, name, type }) => \r\n        <div className={style.Inputbox}>\r\n            <p>{title}</p>\r\n            <input \r\n                type={type} \r\n                value={value} \r\n                name={name}\r\n                onChange={changeInputs} \r\n                className={style.InputStyle} \r\n            />\r\n            <button onClick={clickSubmit} style={{backgroundColor:colorChecked}}>수정</button>\r\n        </div>\r\n    ,[]);\r\n\r\n\r\n    return (\r\n        <div className={style.Modify}>\r\n            <h3>상품 수정</h3>\r\n            <div className={style.Inputbox}>\r\n                <p>상품 색상</p>\r\n                <div className={style.Colorbox}>\r\n                    <InputColorCode color={\"red\"} />\r\n                    <InputColorCode color={\"blue\"} />\r\n                    <InputColorCode color={\"green\"} />\r\n                    <InputColorCode color={\"violet\"} />\r\n                </div>\r\n            </div>\r\n            <Inputbox clickSubmit={clickSubmit} title={\"상품 이름\"} value={inputs.title} name={'title'} type={\"text\"} />\r\n            <Inputbox clickSubmit={clickSubmit} title={\"상품 해시태그1\"} value={inputs.hashtag1} name={'hashtag1'} type={\"text\"} />\r\n            <Inputbox clickSubmit={clickSubmit} title={\"상품 해시태그2\"} value={inputs.hashtag2} name={'hashtag2'} type={\"text\"} />\r\n            <Inputbox clickSubmit={clickSubmit} title={\"상품 해시태그3\"} value={inputs.hashtag3} name={'hashtag3'} type={\"text\"} />\r\n            <Inputbox clickSubmit={clickSubmit} title={\"주문자 이름\"} value={inputs.name} name={'name'} type={\"text\"} />\r\n            <Inputbox clickSubmit={clickSubmit} title={\"주문자 번호\"} value={inputs.phone} name={'phone'} type={\"number\"} />\r\n            <Inputbox clickSubmit={clickSubmit} title={\"주문자 주소\"} value={inputs.addr} name={'addr'} type={\"text\"} />\r\n            <button className={cx('btn_common', 'cancel', 'w100')} onClick={() => setIsShowModify(false)}>수정 취소</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modify;\r\n","import React, { useState } from 'react';\r\nimport style from './OrderList.module.css';\r\nimport classNames from 'classnames/bind';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useQuery, useMutation, gql } from '@apollo/client';\r\nimport { Colorcode } from '../../util/Colorcode'\r\nimport Modify from '../../components/modify';\r\n\r\n/***********************************\r\n * graphQL start\r\n ***********************************/\r\nconst GET_ORDERS = gql`\r\n    query {\r\n        orders{\r\n            id\r\n            user_id\r\n            color\r\n            title\r\n            hashtag1\r\n            hashtag2\r\n            hashtag3\r\n            name\r\n            phone\r\n            addr\r\n            price\r\n            is_pay\r\n        }\r\n    }\r\n`;\r\n\r\nconst DELETE_ORDER = gql`\r\n    mutation DeleteOrder($id: ID!){\r\n        deleteOrder(id: $id){\r\n            id\r\n        }\r\n    }\r\n`;\r\n/***********************************\r\n* graphQL end\r\n***********************************/\r\n\r\n\r\n\r\nfunction OrderList() {\r\n    const cx = classNames.bind(style); // classNames\r\n    const history = useHistory(); // router\r\n    const user = localStorage.getItem('user') // for user_id\r\n\r\n    /***********************************\r\n     * states\r\n     ***********************************/\r\n    const [orderForModify, setOrderForModify] = useState('');\r\n    const [isShowModify, setIsShowModify] = useState(false);\r\n\r\n    /***********************************\r\n     * functions\r\n     ***********************************/\r\n    const clickEditOrder = (order) => {\r\n        setOrderForModify(order);\r\n        setIsShowModify(true);\r\n    }\r\n\r\n    const clickDeleteOrder = (id) => deleteOrder({ variables:{id: id} });\r\n    const deleteOrderCompleted = () => alert('주문을 취소했어요');\r\n\r\n    /***********************************\r\n     * apollo client\r\n     ***********************************/\r\n    const { data } = useQuery(GET_ORDERS);\r\n\r\n\r\n    const [deleteOrder] = useMutation(DELETE_ORDER,\r\n        {\r\n            onCompleted: deleteOrderCompleted,\r\n            refetchQueries: [ // 삭제 후 화면 갱신\r\n                { query: GET_ORDERS }\r\n            ]\r\n        },\r\n    )\r\n\r\n    const user_data = data?.orders.filter(order => order.user_id === JSON.parse(user).user.id );\r\n\r\n    return (\r\n        <>\r\n            <div className={style.OrderList}>\r\n                <h2>{user_data != undefined && user_data[0].name}님의 주문내역</h2>\r\n\r\n                <ul className={style.List}>\r\n                    {\r\n                        ( !user_data || user_data.length===0\r\n                        ) ? ( <li>주문 내역이 없습니다.</li>\r\n                        ) : ( \r\n                            user_data.map((order, i) => \r\n                                <li key={i}>\r\n                                    <div className={style.Productbox}>\r\n                                        <div className={cx('Item', 'Item1')}>\r\n                                            <div className={style.InnerText}>\r\n                                                <div className={style.ColorNum}>{Colorcode(order.color)}</div>\r\n                                                <div className={style.ItemName}>SHAMPOO</div>\r\n                                                <div className={style.CodeName}>{order.title !== '' ? order.title : 'BEAUTY'}</div>\r\n                                                <div className={style.Hashtag}>\r\n                                                    {`#${order.hashtag1} `}\r\n                                                    {`#${order.hashtag2} `}\r\n                                                    {`#${order.hashtag3} `}\r\n                                                </div>\r\n                                                <div className={style.Size}>300ml / 10.14 fl. oz.</div>\r\n                                            </div>\r\n                                            <img src={`/images/goods/goods_${order.color}.png`} alt=\"상품이미지1\" />\r\n                                        </div>\r\n\r\n                                        <div className={cx('Item', 'Item2')}>\r\n                                            <div className={style.InnerText}>\r\n                                                <div className={style.ColorNum}>{Colorcode(order.color)}</div>\r\n                                                <div className={style.ItemName}>CONDITIONER</div>\r\n                                                <div className={style.CodeName}>{order.title !== '' ? order.title : 'BEAUTY'}</div>\r\n                                                <div className={style.Hashtag}>\r\n                                                    {`#${order.hashtag1} `}\r\n                                                    {`#${order.hashtag2} `}\r\n                                                    {`#${order.hashtag3} `}\r\n                                                </div>\r\n                                                <div className={style.Size}>300ml / 10.14 fl. oz.</div>\r\n                                            </div>\r\n                                            <img src={`/images/goods/goods_${order.color}.png`} alt=\"상품이미지2\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={style.Userbox}>\r\n                                        <p>\r\n                                            <span>이름</span>\r\n                                            <span>{order.name}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span>전화번호</span>\r\n                                            <span>{order.phone}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span>주소</span>\r\n                                            <span>{order.addr}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span>결제금액</span>\r\n                                            <span>{order.price}원</span>\r\n                                        </p>\r\n                                        <div className={style.Btnbox}>\r\n                                            <button className=\"btn_common\" onClick={() => clickEditOrder(order)} style={{backgroundColor:order.color}}>주문수정</button>\r\n                                            <button className={cx('btn_common', 'cancel')} onClick={() => clickDeleteOrder(order.id)}>주문취소</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        ) // ) : ( \r\n                    } \r\n                </ul>\r\n            </div>\r\n            {\r\n                (isShowModify === true && !orderForModify === false) &&\r\n                <Modify order={orderForModify} setIsShowModify={setIsShowModify} />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderList;\r\n","import { BrowserRouter} from \"react-router-dom\";\r\nimport ScrollToTop from './util/ScrollTop';\r\nimport { Route ,Switch } from \"react-router-dom\";\r\nimport React, {useState} from 'react';\r\n\r\nimport Wrapper from \"./layout/wrapper\";\r\nimport Header from './layout/header';\r\nimport Footer from './layout/footer';\r\nimport Home from './pages/home';\r\nimport Order from './pages/order';\r\nimport OrderEnd from './pages/orderEnd';\r\nimport OrderList from \"./pages/orderList\";\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { ApolloClient, InMemoryCache } from '@apollo/client'\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nfunction App() {\r\n\r\n  /***********************************\r\n   * apollo client start\r\n  ***********************************/\r\n  const client = new ApolloClient({\r\n    uri: 'https://onedev.i234.me:4000',\r\n    cache: new InMemoryCache()\r\n  });\r\n  \r\n  const errorLink = onError(({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors)\r\n      graphQLErrors.map(({ message, locations, path }) =>\r\n        console.log(\r\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n        )\r\n      );\r\n    if (networkError) console.log(`[Network error]: ${networkError}`);\r\n  });\r\n  /***********************************\r\n   * apollo client end\r\n  ***********************************/\r\n\r\n\r\n    // 로그인 시 로컬스토리지에 user 정보 등록.. 로그인 구현하게 되면 소스 변경\r\n  const user = {\r\n      user:{\r\n      id:1,\r\n      email:\"dh@dh.com\",\r\n      address:\"대구 남구 대명동\"\r\n      }\r\n  }\r\n  localStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n          <ScrollToTop />\r\n          <Header />\r\n          <Wrapper>\r\n            <Switch>            \r\n                <Route exact path=\"/beauty\" component={Home}/>  \r\n                <Route path=\"/beauty/order\" component={Order}/>\r\n                <Route path=\"/beauty/orderEnd\" component={OrderEnd}/>\r\n                <Route path=\"/beauty/orderList\" component={OrderList}/>\r\n            </Switch>\r\n          </Wrapper>\r\n          <Footer />\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './default.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__Ym6yz\",\"Left\":\"Order_Left__pT6Gw\",\"Title\":\"Order_Title__ancOJ\",\"InputName\":\"Order_InputName__s6aaa\",\"InputStyle\":\"Order_InputStyle__ZGNGO\",\"InputAddress\":\"Order_InputAddress__LM7Pw\",\"Address\":\"Order_Address__3R_th\",\"BtnSearch\":\"Order_BtnSearch__2v3vg\",\"Right\":\"Order_Right__1erLp\",\"OrderInfoBox\":\"Order_OrderInfoBox__SayHT\",\"arrDown\":\"Order_arrDown__17d15\",\"BtnPay\":\"Order_BtnPay__H2b_Y\",\"TitlePay\":\"Order_TitlePay__2Md1V\",\"PayList\":\"Order_PayList__NRVdL\",\"SubText\":\"Order_SubText__3znY0\",\"Total\":\"Order_Total__3oCQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderList\":\"OrderList_OrderList__1tqrd\",\"Item\":\"OrderList_Item__s0ErK\",\"Item1\":\"OrderList_Item1__wLQME\",\"Item2\":\"OrderList_Item2__3XVQY\",\"InnerText\":\"OrderList_InnerText__3kz2O\",\"ColorNum\":\"OrderList_ColorNum__3hhjM\",\"ItemName\":\"OrderList_ItemName__2FO02\",\"CodeName\":\"OrderList_CodeName__IPCZx\",\"Hashtag\":\"OrderList_Hashtag__3zvef\",\"Size\":\"OrderList_Size__14pi9\",\"Productbox\":\"OrderList_Productbox__qXWXa\",\"List\":\"OrderList_List__1_44X\",\"Userbox\":\"OrderList_Userbox__3AWxR\",\"Btnbox\":\"OrderList_Btnbox__s7prP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderEnd\":\"OrderEnd_OrderEnd__ouRx8\",\"Item\":\"OrderEnd_Item__1ezH5\",\"Item1\":\"OrderEnd_Item1__6MIcv\",\"Item2\":\"OrderEnd_Item2__1frED\",\"InnerText\":\"OrderEnd_InnerText__1S52r\",\"ColorNum\":\"OrderEnd_ColorNum__2IP7T\",\"ItemName\":\"OrderEnd_ItemName__iTyIt\",\"CodeName\":\"OrderEnd_CodeName__fv2rt\",\"Hashtag\":\"OrderEnd_Hashtag__y5GIc\",\"Size\":\"OrderEnd_Size__4ueAm\",\"Productbox\":\"OrderEnd_Productbox__2Du-R\",\"Userbox\":\"OrderEnd_Userbox__1i33S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modify\":\"Modify_Modify__1em6K\",\"Inputbox\":\"Modify_Inputbox__2pgfS\",\"InputStyle\":\"Modify_InputStyle__A37ma\",\"Colorbox\":\"Modify_Colorbox__-oAHP\",\"ColorCode\":\"Modify_ColorCode__3hIBC\",\"Btnbox\":\"Modify_Btnbox__2kUry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderPc\":\"Header_HeaderPc__1ZMzq\",\"Logo\":\"Header_Logo__3AtGO\",\"HeaderMobile\":\"Header_HeaderMobile__3u0ZK\",\"NavClose\":\"Header_NavClose__2Xp6S\",\"NavOpen\":\"Header_NavOpen__1yWZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Wrapper_Wrapper__3Q_5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__3p8Ud\"};"],"sourceRoot":""}